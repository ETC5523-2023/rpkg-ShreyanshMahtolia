#'
#'
#' @return An object of class `root` and `character`.
#'
#' @examples
#' quadratic(1,5,6)
#' quadratic(1,-6,9)
#' quadratic(5,2,1)
#'
#' @export
quadratic <- function(a, b, c) {
discriminant <- b ^ 2 - 4 * a * c
if (is.na(a) || is.na(b) || is.na(c)) {
stop("Please Enter Numeric Coefficients Only")
} else if (a == 0) {
stop("Please Enter Proper Coefficients Where a!=0")
} else if (discriminant > 0) {
root1 <-
(-b + sqrt(discriminant)) / (2 * a)  #Two distinct real roots identified
root2 <- (-b - sqrt(discriminant)) / (2 * a)
Roots <- c(root1, root2)
Root_Type <- c("Real & Distinct", "Real & Distinct")
quad_root <- tibble::tibble(Roots, Root_Type)
return(quad_root)
} else if (discriminant == 0) {
root <- -b / (2 * a)  #One distinct root, repeated
Roots <- c(root, root)
Root_Type <- c("Real & Repeated", "Real & Repeated")
quad_root <- tibble::tibble(Roots, Root_Type)
return(quad_root)
} else {
real_root <- -b / (2 * a)
imaginary_root <-
sqrt(-discriminant) / (2 * a)  #Imaginary Roots Identified
Roots <-
c(
complex(real = real_root, imaginary = imaginary_root),
complex(real = real_root, imaginary = -imaginary_root)
)
Root_Type <- c("Imaginary", "Imaginary")
quad_root <- tibble::tibble(Roots, Root_Type)
return(quad_root)
}
}
#References: https://www.mathsisfun.com/algebra/quadratic-equation.html
#References: https://stat.ethz.ch/R-manual/R-devel/library/base/html/complex.html
quadratic(NA,5,6)
quadratic(3,NA,6)
quadratic(3,NA,NA)
quadratic(3,6,NA)
#' Roots of A Quadratic Equation
#'
#' @description
#' Calculates the roots of a quadratic equation and returns either 2 distinct
#' real roots, 1 repeated real root, or 2 imaginary roots depending on the
#' discriminant calculated. The order of the roots entered is important as each
#' input variable corresponds to the coefficient in a simple quadratic equation.
#' The values `a,b,c` are coefficients of the equation and follow the
#' nomenclature of `ax^2 + bx + c` where `a!=0`.
#'
#' @param a A real numeric coefficient
#' @param b A real numeric coefficient
#' @param c A real numeric coefficient
#'
#'
#' @return An object of class `root` and `character`.
#'
#' @examples
#' quadratic(1,5,6)
#' quadratic(1,-6,9)
#' quadratic(5,2,1)
#'
#' @export
quadratic <- function(a, b, c) {
discriminant <- b ^ 2 - 4 * a * c
if (is.na(a) || is.na(b) || is.na(c)) {
stop("Please Enter Numeric Coefficients Only")
} else if (a == 0) {
stop("Please Enter Proper Coefficients Where a!=0")
} else if (discriminant > 0) {
root1 <-
(-b + sqrt(discriminant)) / (2 * a)  #Two distinct real roots identified
root2 <- (-b - sqrt(discriminant)) / (2 * a)
Roots <- c(root1, root2)
Root_Type <- c("Real & Distinct", "Real & Distinct")
quad_root <- tibble::tibble(Roots, Root_Type)
return(quad_root)
} else if (discriminant == 0) {
root <- -b / (2 * a)  #One distinct root, repeated
Roots <- c(root, root)
Root_Type <- c("Real & Repeated", "Real & Repeated")
quad_root <- tibble::tibble(Roots, Root_Type)
return(quad_root)
} else {
real_root <- -b / (2 * a)
imaginary_root <-
sqrt(-discriminant) / (2 * a)  #Imaginary Roots Identified
Roots <-
c(
complex(real = real_root, imaginary = imaginary_root),
complex(real = real_root, imaginary = -imaginary_root)
)
Root_Type <- c("Imaginary", "Imaginary")
quad_root <- tibble::tibble(Roots, Root_Type)
return(quad_root)
}
}
#References: https://www.mathsisfun.com/algebra/quadratic-equation.html
#References: https://stat.ethz.ch/R-manual/R-devel/library/base/html/complex.html
devtools::document()
devtools::load_all()
devtools::check()
usethis::use_package("dplyr",type = "Imports")
#' Line Plot For Female Earnings For Particular Age Group
#'
#' @description
#' Generates a line plot for percentage earnings made by females throughout
#' 1979-2011 for the particular age group entered.
#'
#'
#' @param age_group A string containing age group of females
#'
#'
#' @return A line plot of entered age group
#'
#' @examples
#' earningsplot("16-19 years")
#'
#' @export
earningsplot <- function(age_group){
if (!age_group %in% age_groups){
stop("Please Enter Correct Age Group. Available Age Groups Can Be Found By
Executing 'age_groups' Command")
} else{
plot1 <- earnings_female |>
dplyr::filter(Age_Group == age_group) |>
ggplot2::ggplot(aes(x = Year, y = percent, color = Age_Group)) +
ggplot2::geom_line() +
ggplot2::labs(x = "Year", y = "Percentage") +
ggplot2::labs(title = "Earnings of Females From 1979-2011") +
ggplot2::theme_bw()
plot1 <- print(plot1)
return(plot1)
}
}
devtools::document()
devtools::load_all()
earningsplot("16-19 years")
devtools::document()
devtools::check()
#' Line Plot For Female Earnings For Particular Age Group
#'
#' @description
#' Generates a line plot for percentage earnings made by females throughout
#' 1979-2011 for the particular age group entered.
#'
#'
#' @param age_group A string containing age group of females
#'
#'
#' @return A line plot of entered age group
#'
#' @examples
#' earningsplot("16-19 years")
#'
#' @export
earningsplot <- function(age_group){
if (!age_group %in% age_groups){
stop("Please Enter Correct Age Group. Available Age Groups Can Be Found By
Executing 'age_groups' Command")
} else{
plot1 <- WomInWorkShiny::earnings_female |>
dplyr::filter(Age_Group == age_group) |>
ggplot2::ggplot(aes(x = Year, y = percent, color = Age_Group)) +
ggplot2::geom_line() +
ggplot2::labs(x = "Year", y = "Percentage") +
ggplot2::labs(title = "Earnings of Females From 1979-2011") +
ggplot2::theme_bw()
plot1 <- print(plot1)
return(plot1)
}
}
devtools::load_all()
devtools::document()
devtools::check()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::install()
devtools::check()
devtools::document()
devtools::load_all()
devtools::install()
devtools::check()
#' Line Plot For Female Earnings For Particular Age Group
#'
#' @description
#' Generates a line plot for percentage earnings made by females throughout
#' 1979-2011 for the particular age group entered.
#'
#'
#' @param age_group A string containing age group of females
#'
#'
#' @return A line plot of entered age group
#'
#' @examples
#' earningsplot("16-19 years")
#'
#' @export
earningsplot <- function(age_group){
if (!age_group %in% WomInWorkShiny::age_groups){
stop("Please Enter Correct Age Group. Available Age Groups Can Be Found By
Executing 'age_groups' Command")
} else{
plot1 <- WomInWorkShiny::earnings_female |>
dplyr::filter(Age_Group == age_group) |>
ggplot2::ggplot(ggplot2::aes(x = earnings_female$Year, y = earnings_female$percent)) +
ggplot2::geom_line() +
ggplot2::labs(x = "Year", y = "Percentage") +
ggplot2::labs(title = "Earnings of Females From 1979-2011") +
ggplot2::theme_bw()
plot1 <- print(plot1)
return(plot1)
}
}
earningsplot("16-19 years")
plot1 <- WomInWorkShiny::earnings_female |>
dplyr::filter(Age_Group == age_group) |>
ggplot2::ggplot(ggplot2::aes(x = Year, y = percent)) +
ggplot2::geom_line() +
ggplot2::labs(x = "Year", y = "Percentage") +
ggplot2::labs(title = "Earnings of Females From 1979-2011") +
ggplot2::theme_bw()
#' Line Plot For Female Earnings For Particular Age Group
#'
#' @description
#' Generates a line plot for percentage earnings made by females throughout
#' 1979-2011 for the particular age group entered.
#'
#'
#' @param age_group A string containing age group of females
#'
#'
#' @return A line plot of entered age group
#'
#' @examples
#' earningsplot("16-19 years")
#'
#' @export
earningsplot <- function(age_group){
if (!age_group %in% WomInWorkShiny::age_groups){
stop("Please Enter Correct Age Group. Available Age Groups Can Be Found By
Executing 'age_groups' Command")
} else{
plot1 <- WomInWorkShiny::earnings_female |>
dplyr::filter(Age_Group == age_group) |>
ggplot2::ggplot(ggplot2::aes(x = Year, y = percent)) +
ggplot2::geom_line() +
ggplot2::labs(x = "Year", y = "Percentage") +
ggplot2::labs(title = "Earnings of Females From 1979-2011") +
ggplot2::theme_bw()
plot1 <- print(plot1)
return(plot1)
}
}
earningsplot("16-19 years")
#' Line Plot For Female Earnings For Particular Age Group
#'
#' @description
#' Generates a line plot for percentage earnings made by females throughout
#' 1979-2011 for the particular age group entered.
#'
#'
#' @param age_group A string containing age group of females
#'
#'
#' @return A line plot of entered age group
#'
#' @examples
#' earningsplot("16-19 years")
#'
#' @export
earningsplot <- function(age_group){
if (!age_group %in% WomInWorkShiny::age_groups){
stop("Please Enter Correct Age Group. Available Age Groups Can Be Found By
Executing 'age_groups' Command")
} else{
plot1 <- WomInWorkShiny::earnings_female |>
dplyr::filter(Age_Group == age_group) |>
ggplot2::ggplot(ggplot2::aes(x = Year, y = percent, color = "red")) +
ggplot2::geom_line() +
ggplot2::labs(x = "Year", y = "Percentage") +
ggplot2::labs(title = "Earnings of Females From 1979-2011") +
ggplot2::theme_bw()
plot1 <- print(plot1)
return(plot1)
}
}
earningsplot("16-19 years")
#' Line Plot For Female Earnings For Particular Age Group
#'
#' @description
#' Generates a line plot for percentage earnings made by females throughout
#' 1979-2011 for the particular age group entered.
#'
#'
#' @param age_group A string containing age group of females
#'
#'
#' @return A line plot of entered age group
#'
#' @examples
#' earningsplot("16-19 years")
#'
#' @export
earningsplot <- function(age_group){
if (!age_group %in% WomInWorkShiny::age_groups){
stop("Please Enter Correct Age Group. Available Age Groups Can Be Found By
Executing 'age_groups' Command")
} else{
plot1 <- WomInWorkShiny::earnings_female |>
dplyr::filter(Age_Group == age_group) |>
ggplot2::ggplot(ggplot2::aes(x = Year, y = percent)) +
ggplot2::geom_line(color = "red") +
ggplot2::labs(x = "Year", y = "Percentage") +
ggplot2::labs(title = "Earnings of Females From 1979-2011") +
ggplot2::theme_bw()
plot1 <- print(plot1)
return(plot1)
}
}
earningsplot("16-19 years")
devtools::document()
devtools::document()
devtools::load_all()
devtools::install()
devtools::check()
usethis::use_pipe()
#' Line Plot For Female Earnings For Particular Age Group
#'
#' @description
#' Generates a line plot for percentage earnings made by females throughout
#' 1979-2011 for the particular age group entered.
#'
#'
#' @param age_group A string containing age group of females
#'
#'
#' @return A line plot of entered age group
#'
#' @examples
#' earningsplot("16-19 years")
#'
#' @export
earningsplot <- function(age_group){
if (!age_group %in% WomInWorkShiny::age_groups){
stop("Please Enter Correct Age Group. Available Age Groups Can Be Found By
Executing 'age_groups' Command")
} else{
plot1 <- WomInWorkShiny::earnings_female %>%
dplyr::filter(Age_Group == age_group) %>%
ggplot2::ggplot(ggplot2::aes(x = Year, y = percent)) +
ggplot2::geom_line(color = "red") +
ggplot2::labs(x = "Year", y = "Percentage") +
ggplot2::labs(title = "Earnings of Females From 1979-2011") +
ggplot2::theme_bw()
plot1 <- print(plot1)
return(plot1)
}
}
earningsplot("16-19 years")
earningsplot("16-19 years")
devtools::document()
devtools::load_all()
devtools::install()
devtools::check()
devtools::load_all()
devtools::install()
devtools::document()
pkgdown::build_site()
earningsplot("16-19 years")
devtools::document()
devtools::document()
devtools::load_all()
earningsplot("16-19 years")
devtools::check()
devtools::document()
#' Line Plot For Female Earnings For Particular Age Group
#'
#' @description
#' Generates a line plot for percentage earnings made by females throughout
#' 1979-2011 for the particular age group entered.
#'
#'
#' @param age_group A string containing age group of females
#'
#'
#' @return A line plot of entered age group
#'
#'
#' @examples
#' earningsplot("16-19 years")
#'
#' @export
earningsplot <- function(age_group){
if (!age_group %in% WomInWorkShiny::age_groups){
stop("Please Enter Correct Age Group. Available Age Groups Can Be Found By
Executing 'age_groups' Command")
} else{
plot1 <- WomInWorkShiny::earnings_female |>
dplyr::filter(Age_Group == age_group) |>
ggplot2::ggplot(ggplot2::aes(x = Year, y = percent)) +
ggplot2::geom_line(color = "red") +
ggplot2::labs(x = "Year", y = "Percentage") +
ggplot2::labs(title = "Earnings of Females From 1979-2011") +
ggplot2::theme_bw()
plot1 <- print(plot1)
return(plot1)
}
}
devtools::document()
devtools::load_all()
devtools::install()
devtools::check()
devtools::load_all()
devtools::document()
devtools::install()
earningsplot("16-19 years")
earningsplot("16-19 years")
#' Line Plot For Female Earnings For Particular Age Group
#'
#' @description
#' Generates a line plot for percentage earnings made by females throughout
#' 1979-2011 for the particular age group entered.
#'
#'
#' @param age_group A string containing age group of females
#'
#'
#' @return A line plot of entered age group
#'
#'
#' @examples
#' earningsplot("16-19 years")
#'
#' @export
earningsplot <- function(age_group){
if (!age_group %in% WomInWorkShiny::age_groups){
stop("Please Enter Correct Age Group. Available Age Groups Can Be Found By
Executing 'age_groups' Command")
} else{
plot1 <- WomInWorkShiny::earnings_female |>
dplyr::filter(Age_Group == age_group) |>
ggplot2::ggplot(ggplot2::aes(x = Year, y = percent)) +
ggplot2::geom_line(color = "red") +
ggplot2::labs(x = "Year", y = "Percentage") +
ggplot2::labs(title = "Earnings of Females From 1979-2011") +
ggplot2::theme_bw()
#plot1 <- print(plot1)
return(plot1)
}
}
earningsplot("16-19 years")
#' Line Plot For Female Earnings For Particular Age Group
#'
#' @description
#' Generates a line plot for percentage earnings made by females throughout
#' 1979-2011 for the particular age group entered.
#'
#'
#' @param age_group A string containing age group of females
#'
#'
#' @return A line plot of entered age group
#'
#'
#' @examples
#' earningsplot("16-19 years")
#'
#' @export
earningsplot <- function(age_group){
if (!age_group %in% WomInWorkShiny::age_groups){
stop("Please Enter Correct Age Group. Available Age Groups Can Be Found By
Executing 'age_groups' Command")
} else{
plot1 <- WomInWorkShiny::earnings_female |>
dplyr::filter(Age_Group == age_group) |>
ggplot2::ggplot(ggplot2::aes(x = Year, y = percent)) +
ggplot2::geom_line(color = "red") +
ggplot2::labs(x = "Year", y = "Percentage") +
ggplot2::labs(title = "Earnings of Females From 1979-2011") +
ggplot2::theme_bw()
return(plot1)
}
}
devtools::document()
devtools::load_all()
pkgdown::build_site()
devtools::check()
quadratic(1,NULL,5)
quadratic(1,5)
quadratic(1,5,6)
devtools::document()
devtools::load_all()
devtools::install()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
